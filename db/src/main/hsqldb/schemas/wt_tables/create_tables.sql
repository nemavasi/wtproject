--HSQLDB
drop table if exists log_level cascade;
create table log_level
  (
    id             bigint generated by default as identity primary key ,
    sys_name       varchar (30) ,
    name           varchar (100) ,
    warning_level  numeric(1) ,
    is_deleted     char(1) default 'N' not null check(is_deleted = 'Y' or is_deleted = 'N') ,
    display_order  numeric(10) ,
    search_synonim varchar (100)
  ) ;
comment on table log_level is 'Уровни логгирования' ;
comment on column log_level.warning_level is 'Уровень логов';

drop table if exists organization cascade;
create table organization
  (
    id             bigint generated by default as identity primary key ,
    sys_name       varchar (30) ,
    short_name     varchar (100) ,
    name           varchar (200) ,
    full_name      varchar (500) ,
    address        varchar (200) ,
    phone          varchar (100) ,
    is_deleted     char(1) default 'N' not null check(is_deleted = 'Y' or is_deleted = 'N') ,
    display_order  numeric(10) ,
    search_synonim varchar (100)
  ) ;
comment on table organization is 'Список организаций ';
comment on column organization.name is 'Наименование организации';
comment on column organization.full_name is 'Полное наименование организации' ;
comment on column organization.address is 'Адрес организации' ;
comment on column organization.phone is 'Телефон организации' ;

drop table if exists role cascade;
create table role
  (
    id             bigint generated by default as identity primary key ,
    sys_name       varchar (30) ,
    name           varchar (100) ,
    is_deleted     char(1) default 'N' not null check(is_deleted = 'Y' or is_deleted = 'N') ,
    display_order  numeric(100) ,
    search_synonim varchar (100)
  ) ;
comment on table role is 'Справочник ролей пользователей' ;


drop table if exists access_control_item cascade;
create table access_control_item
  (
    id             bigint generated by default as identity primary key ,
    sys_name       varchar (30) ,
    name           varchar (100) ,
    is_deleted     char(1) default 'N' not null check(is_deleted = 'Y' or is_deleted = 'N') ,
    display_order  numeric(100) ,
    search_synonim varchar (100)
  ) ;
comment on table access_control_item
is
  'Справочник объектов прав' ;

drop table if exists access_for_role cascade;
create table access_for_role
  (
    id                     bigint generated by default as identity primary key ,
    access_control_right   char (1) ,
    role_id                bigint not null ,
    access_control_item_id bigint not null
  ) ;
comment on table access_for_role is 'Соответствие объектов прав ролям' ;
comment on column access_for_role.access_control_right is 'право на запись (W) или на чтение (R)' ;
comment on column access_for_role.role_id is 'id роли' ;
comment on column access_for_role.access_control_item_id is 'id объекта прав' ;

drop table if exists department cascade;
create table if not exists department
  (
    id                   bigint generated by default as identity primary key ,
    organization_id      bigint not null ,
    sys_name             varchar (30) ,
    name                 varchar (200) ,
    parent_department_id bigint ,
    is_deleted           char(1) default 'N' not null check(is_deleted = 'Y' or is_deleted = 'N') ,
    display_order        numeric(100) ,
    search_synonim       varchar (100)
  ) ;
comment on table department is 'Подразделения организаций' ;
comment on column department.organization_id is 'id организации' ;
comment on column department.sys_name is 'Системное имя подразделения' ;
comment on column department.name is 'Название подразделения' ;
comment on column department.parent_department_id is 'Ссылка на головное подразделение' ;
  
commit



--start data

insert into access_control_item (
        sys_name, name, is_deleted, display_order, search_synonim
    ) values (
        'all', 'all', 'N', 1, 'all'
    )
    ;


commit
